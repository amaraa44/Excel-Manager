<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABzFgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAFjpJ
        REFUeNrtnWl8XNV5h58ryZK1r5YlWZslWRskDhhwaAjGEExIihNIQ0kKJAYHqElCCBgISdO0H9pfCzgO
        m8HEbAkJFP9SIEBYGmhYUoiBhtSa0WItlizb2qxdlmVpbj9oPJKskXSO5s525/3riz1z7p177/uc5b7v
        Oe8xEHlXLJkUUMlqPsVqMjjMbu6m1W63aYilZyieDApYRTWVlJBLKrEAmBiYvMl1NAoA9qsEiWRTTAXV
        VFJENslEub8zTyr5JN9iTACwg6JJJYcSKqlmFYVkkeD5zpzzafVwER/a6THERJjZY0lnBauooooyVpBG
        3IJmZ1qJdCoFgPBTApkUUU4VlZSQQ4rnvk0Fs09XFIn2ejT2BcAgmeUUU8EpVFBINkmeDk/X7DaW3QCI
        IZU8SqiiilUUkEm85zsxu20BiCODfE/Pnkua++Vt0uwimwKQyDJ3z15FMTkkEy113e4ARJHCclZSSTXl
        FJFFosU9+9SL8TGi7D9IDo8bXEIaeZRSTRVl5JPBUs93Vpt9mG5aqcNBI3dwtt3bklAGYCmZbrdsldst
        u8RSo0+Z3cUAnbRQSw31tNDFEBDFDXav/6EIQBLZFFFBNRWsPMkta63Zx+nnEI3U4qCeNnoYPenZRICf
        NDQAiCaFHPfLWzmFZE5zt1jfs/fSzj4cONlHO70ct7+ZQxOAWNLIp4xKqiljBelablk9s4/QQyv1OHHQ
        xGEGmIhkswcTgHiyKKCcaqpYSa4PbtmFzO5ikC5aqMVBHS10MiSvh8EBwCCZbIrdL2/FLCPJbz37BP0c
        pslt9ja6OSpmDg4AMaSQ5w64lvvFLTvVxI/RN61nP0CvvaL24QTApFt28p29lBV+cMtOmf0oPbSxjxqc
        NHGIPunZgwVAIlkUul/eSvzilp3y9w3RRQt1OKijmQ4GpWcPDgBRJM9wyy6z3C07vWcf5DDNbldNK12M
        iPGCA8ASUsmjlCqqWeUXt+yU2Y/Tx0EaceKkngMc4ZiYLDgALCWTfI9bNs+PblkY5QgHaMCBgyYO0se4
        GCo4ACSxzO2WraSY5ST5sWcfpotW6nDipIlOBnCJeYIBwAm37OSAroAsy92yM4MwHbTgxEEdrXQyLCYJ
        DgDRZJJHmSfgar1bdmYQ5iBNOHFQz4FZQRhRgAGI5kKuYjU5pPrNLTsZhDngfmdvpJ2+yA7ChA4AMdzE
        P5DqJ7OP0E0rDdTgpFmCMKEIwKX8iFRLHbMuBt3TK04EYYZt5Kqx2dA0hu+S5pN5pnr2AQ7RjJMa9/QK
        OwZhTC6lyBPICn2NcIC9OOd2mxkMkagNwPQgzOT0CidOGmi3VRAmluf5/KxnE26zhFz0soddvOh9qB1D
        grL5Tw7C1ONwB2H6I6hnD7fOzCCTz7OO/+DH3rIbxCic4MSND9LFfmpx4qSFTtsHYdLJsw2y8XyDfK6j
        abZ5XfOafYIBOmjyBGG6IygI81leJslGkBs8zyZ6VVqAcfpopxEnDhpoj9AgTDKxtmrjTC7hGu5ZCACD
        o/yIVzlMf4QHYboYJt1WCESxmd3sn/nRbI3xFjX0RHwMroF6m92RSTmfO5kJb4q0vCHeNXJyf2mLNuCc
        mS+yYmpdhZcfYHYHVkLC9JirAKCrP1IbJhCYFLJ+VhufRKwA4Ev9f5xHwuZqL2Gdl05+Br7h49UOHQTC
        XaYAIBIARAKASAAQCQACgEgAEAkAIgFAJACIBACRACASAEQCgEgAEAkAIgFAJACIBACRACASAEQCQITL
        ZkviZV2ArvnTyVF6aiMcmfXZEpZZXOUGGBAAAqtb2KywNiCG33LzrLwpq/iFRQm5JhXNNu4XAAKrbLKV
        yuV6+SyOUndCPquU4esJBABdqdVfY45yLqwcRRi+n0sGgREuAUAAEAkAIgFAFJmStwB9GUE+3tJzCQC6
        GlPKnhbjNbOiixHiLHUE+ZyZWQDQ1X0859k5ab6a2eklB2sjl1v6xA2aBYDAyqCWdxd99BB/DLUbkkGg
        rqLtdTtWtACxrNdOqTrGm/T5/MsrOUur9n5IgxBsPQDjrOc2TQAm+DY7fQbvJ1ytvIVLFPv5shh89mPx
        XS4ewkEUhsbfEq4hy8ffPY8vg/IvmjzMn8Xg/gAAWrhXcxM4k9P5a59+M4EbSdHY7eSP7BJz+wsAeIY3
        NZ0SS9hEmg+/+AUuVC5rMMRddIq5/QdAP/fQr4WAyVouWvTvpbGFeI1xx7P8ToztTwDgDZ7WPCKOa0la
        5K9dxjkazX8LP7XRbmYhCsA499Ks2Q2co9GMT9dybvBsX7+wXNzP/4mp/Q0AONihta+mSTzXkrCIX/o6
        azTq/9s8LoYOBADwOO9ptgHrOFf7V4r4lvJ1GwxwFz1i6MAA0MU2RjQQMEni2mkb1atpE1Uaw79neFXM
        HCgA4CVe0DziQj6jVb6KbyiXNWjkpxG/+VVAARhlG4e02oBUrtEY0BlcR7Fy/Z/gPpxi5EACAHt4VPOI
        izlTuewZfE0Dlj/wpJg40ADATj7WagMy2KQYZI3h71muvDSjj3+z4cZvYQBAKz9jTOttYCOnKZU7l0s1
        zvoUvxcDBwMA2M3rGqVNsvmmwpXEs4U05fpfz70RtKl9iAEwyDZ6tdqASzl1wTIbuFj5fOP8zHYbv4YR
        APAHfqXVBuRx5QJlUriRBOX6/3ueEuMGE4AJ7mOfVhtwOZXzfv8l1imeyaCXu+gX4wYTAKjjAY0+2KRo
        3jYgiy3EKr//P8mbYtpgAwC/4F2tNuBvKZnzuys4U7n5d3CvVlBKTzYbWPpzXUAP2zidJEXDmZRxBf/i
        9bsCriNa8TzH2U6T3+7JZD3RCtUmin28PuuKs9ho6cqgKN7nQ19P4jrpz6SPT1t0gbE8iTnrF+b6M3FQ
        6PU8P1Q+i8mLJFt29b/z8rum4t+zXpxbp9GrfLza34/nvYNLGJt19R+SPpMhf2qM7bQrdwMmlXzVy+fl
        XKN4BoNu7mLQr/ekZpi5EsGYymfw5Ve0GhH/6iN+rlHa4CovyZU2U6J8o4/zFqIQAgB28pFGG3DqrMUb
        p/N3yvjs5QG7JXIMfwAOsp1jyghEs4llM/5/PXlKRjUY4x5axKShBgD8hleUy5qcxsZp/z+bv1E+9mWe
        FYOGIgDDbKNbuQ2I4eppyRSvIEOx/ndyF8Ni0FAEAN7hlxqlz+I897+K2KB81C7+R8wZqgC4eIA6xTbA
        ZClfdTuoLlAc/xv8mR0BGv6pLUWdK49ADGgtol3oV3y2X6AyhOzjfrYrX+46yqgljo1K/j+DUe6hLUB3
        8hdaFVCOZo+XK+/n5UWvhfJefX0OeQcuRcxTXMZ6pVpqsoJ11FLF2YrnfonfBOw+HuJhpafm8hKPaOZq
        i6/G58hE4ADo5W7WKC7oNtjAI1xItlL9P8S/MxKguzAYx7XodYZm6K1QDGSOoNfZrVx2Dacqrxt8hD8F
        8C4MbKVAAnCcnyn1n2CynCv5pJI5PuBhe5nEvgDAX9ipOFaP4zqyFixrcJS7OShmDBcAYBd7FBvRVKVr
        e57nxYjhBMBhtjOq2A0sJIN27mZUjBhOAMDzvGTRmUwe9n0+jAAQaI1wD50WjKUN3vc506AoKKli3+MJ
        C8w/zN10iAHDEQCTHdT43Ab8hhfFfOEJADRzn09pGwxaucdrRn5RWAAAT/OGD22AyQ4+FuOFMwD9bNNM
        LDm9/r+rnYRCFGIAwO95ZpFHTvCYpH0NfwDG6VrkkdGcQ6yYLtwBWMumRR97uY+ZxkVBByCZOxWne8+W
        SSJbWS7GC2cAruJiH+bwmazlOjFe+AJwCt/XyA3oTQY3cIaYLzwBiOM2Sn2cw2uSx1bixYDhCMBlXtcA
        62sjl4kBww+AYu7Q2utj7jZgKbdQICYMLwCiuZlPWrSEw+Q0tgR8kqbNVh8HeuvYixRzfRuKD/oaXvRh
        K9fFmD+eRKW9g497maoeTaLynak9pVFfQ2KBBSCbO0lVeAAmH1KlsJeISTa383WGAngP31PKVxDDa/xw
        1tKQMh4k2dLdw3f4uhleYAHYwl8pzfUbYRe3Kr4pXMQVWllIfNVKViqV87Z/UgJnkGLp1eT7eoJAjgE+
        ww2KPXYzryiuejOJ5eZ50stZL9XsPd4T1U1gbY4gn9PhBQ6AVH6onOr9LVrYo2yQar4ru6CHPgDfZIPi
        usCjvAy8zbDyCP9qzhdThjYAq/me4qYQ4OB94H9xKLcB6dzm0za0AoCfFc/tGjv9vEQ30MMzykeYrOcq
        MWboAnC58k4fBi2emUJP8xeNzELfXSDbuChoAJSylaUaqR5PNP3tPKScAMGkjJsD7tYSAJTq5i2copHp
        e/qikWd5X8PVe4UPu5Gry8WEwp/3FzRT6Vj1P9N3p5L/68wXF9wLZPrD3Tkj1WMPD7JGMb+2SQq38z7d
        fr6fn/Oakiu4zQsCLWy2dDajwV4riPZftnDI4z2NTN9/mjXRK5lXNfKNT3C7hY/XW7Zwk2sJHwU9W7jB
        jaxVbqbGeGDWar9BHtTwB0SxhdV+fqjR2Er+BWCdxsw9g3d4zsvnr2olmi3kFu3NqCNa/gQgnTsV0ryc
        MP8I93nd6GmUB+nTGAp+ZUauYVEQAdjM+Rqj1Nfm3Ob9ba8tw1xtQAK3etlzQBRwANbwHeX+0qCP+zg6
        x7fH2aGRUsLkLJkyHnwAEvkBBRr1/7l5d/r4QHMd4fWcJaYNLgBf4xLlsgYdPDhvvgAXDytmGJxsA3LZ
        qjCfSOQ3AMq5VWObR/g1HyxQokYr4TxcwlfEuMECIJatVCib36BFKX3kLuWE82ASxy1zbEEn8jsAG/ma
        VvnHcSqUauIxjTbFZDXftlte3/AAIJ87SNSo/zU8rlj2l3ysZdJNfFYMHGgAoriJNRo11cUj7Fcs287D
        WttRZ7HVsl1EBQBFXaC8y+dk/d/DrzXK79YKD5tcxNfFxIEEIJM7FXf5mtSki0dd3TygsQchLOF7lImR
        AwfA9ZyrYX6DtzScvJN6UWtrWJNKbrJb/C50AVjLtzXOZzDC/V7DP/NpgPs1wsMAV8qU8cAAkMwPyNWa
        ovTKnOGf+fSa1lEmadw+cwqEyD8AXMkXtJr/Pu6fM/wzn0Z5QCs8bHKe4opkAcAHVXOLZtaf/+SdRf6W
        7sghmu9QLab2JwC6WX8MDvMgxxf5a+M8pLXjgEmJz0mpBIB5dRmXax7xtE97fezhac0jLudiMba/ACji
        dq2sPwbNyruHeZeLR2jTagOSuY1lYm5/ABDN91mtac4nlMI/82kvT2qVNzmbzWJufwCwQXOMbVDDYxZc
        +aPUa/kDotjCaWJwqwHI5R9JBa0tz3fSasGVN/Go5u/mc4fMEzpZvi4Ny+cDPtKq/z38yqJrf4I00rTG
        HsNkz1h6JvIZgA+UU7lYr8P8QPsYmSJyknztAsItbaLv1zsRZnfs5xYg0mRyCucprQ7uYO8s3JI53dIn
        btBIswAQWN3IDUrP9VmuntValPBr0i1NFPkT/lUACKyWKDmVDa+loliqkStF5Vd8tp/k14twCQACgEgA
        EAkAIgFAFIGS10BdqSesmutTIwhXIwBYpkP0Kjz2aNq8fDpKrdKOKaqKXvT+ywLAorWNxxSemsGol6hB
        Axstrv+DAkBgZdBPz6KPHg+9be9lEKiPgK0kAES4BAABQCQAiAQAkQAgEgBEAoBIABAJACIBQCQAiAQA
        kQAgEgBEAoBIABAJACIBQCQAiASAiFW4JcVZQDItXNf8RthUG9ccM5gNAcAXXcM5YQNAgZdsRubMNkwA
        0NVa1obR1c7usIY4JgBY+0jDS40zt+nw3piNi51tqgneXrgLiOUCxjlEL2MR/bCiibXZHRnU88bJH7m8
        cjLAYZpwUkMDrfQsanefcFcqr3OmrV77XNzKdhUApl4VXAzRSQt1OKilhS6G7PYmPKfieZHzbXS3BrvZ
        fPJGfXMNAk3PQSmkUMbngBG6aaMOB06aOUz/HPDYRRM26gIN4DW2zt6nceG3gKkakEAhhXwGOEYvB9iH
        Ayf7aKdv0RtAiQJj/GGe4p84OPvLGIZJUmzmpkrFkkMOZwDj9HGIJpw4aKCNHkYj4HGGkybo4T128Yr3
        9iyGD1m3iNOegCGaLLL4BF/CxSAdtODESR0tdDFsSwBe4E9hFEEZpY0aGuauljHcyye0dvyeCwWDVFIp
        ZwMmI3TRSr1ntDBom9GCwQvsshPPMTxHLv9Mxgxj+oYCJJJIMecCoxzhAA3UUEsjB+kLeyeTzfYij8HF
        DpxcyadYQdo014cvMEwdG0ceeZwFHKePgzRSSw0NHODITJ+0KFgAgIs3+G/SyKOEKqoop4BM4i1BYero
        GJaxjNXABIN00EQtNdTTShcjYohgAgDg4ghH2MsLGCSTTTGVVFFBMdkkegY91qAQRRppVHAxJsN00eIe
        LbTQwWDEuJlCDIDpZhpggH38FxBPFoWsoppKSsglxVPeqtFCEkmsZD1wlB4OUI/DPVrot9v2TOECwHQd
        pY023gViSSOfMiqppowVpBPnxZy+oLCUfPL5NDBGH+3sw4mTBg5EfFAqiABMaYxOOvkIiCaFHM9ooZBM
        Ei1BYeroJWSTzWnAOAMcptkTlOqOyKBUSAAwpQl66cXJS0AS2RRRwSmUU8xyki0eLUSTQQbVfBEXw3TS
        Qi1OammhM4KCUiEGwHQNMUQTbwJLyaSAVVRRRSm5pHp2zbIGBYNkkinlAmCEHlppoAYnzRxiQEYLwQJg
        SqO00857wBLSyKPU3UWsIIOls8zpCwqQQAIFnqDU5GjBwT7a6ZWgVLAAmNJxuujiYyCKFJazkkqqKaeI
        LBI9oRRrUJgMSq0Bxun3BKXqIyIoFbIATMlFH33U8QqQyDIKKecUKikmh2SPS9Wq0UImmZzKRlwMukcL
        DupoodOmQakwAGC6hhmmhbeAODLId48Wysi13P08GZRaxYXAMN3spwEHTproYMDmU1hCGIApHeMQh9gD
        xJBKLqVUUU2Zhe7nmUGpIndQqpcDbhQaabdBUCpsAZjSOD30sJfnMUhmOcVUUE0FRWSTZPFoIY5ccjkT
        OE4/B2n0TGHpjezRQmgsDJl0PzfwOpBAJkWUU0UVK8mx3P0cQxZZfJJL3UGpZndQaj/dkThaCL2VQSOM
        0MY7QCzprKCMaipZxQrSLHY/nwhKfd4dlNrvmcLSwRAuxiPB1RTKS8PG6KDD7X5OJYcS9wtlAVkkWIrC
        iaDUecBRjriDUvvc02RsrXCb4miQxDKK3S+URWRb5n6e/UyOY8ya/2NwPTulBQieTAYZpIk3gHgyKKCc
        aiopJZcUi93PEbFwNpxv8ugM9/MKzwtlPukWuZ8FgDDRpPv5z0y6n3NY6Y5QFlrmfhYAwkST7udafgck
        kUURFVRRyUqWW+Z+FgDCREMM0cIfgDgyWcEqqqmilDzSFj1aMCVJVDjqGAc56HE/501zP2doup9ds5dX
        hrdsthOuhqJIcgerq6igiGUK7meDQ2xgrwBgNyWQRaH7hbKEHJK9up8NYDu32mv+kQAwU7FkkE8p1VRR
        Rh7p04LVE+zmJjrsdcMCwFyadD+XUkk1pSRygN/yrN1GAAKA2jNKZAnDsjpBZEP9P73uYlmDucruAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>